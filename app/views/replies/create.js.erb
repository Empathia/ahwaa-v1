<% if @reply.valid? %>
  <% if @reply.contextual_index.blank? %>
    var stamp = 'tmp_' + new Date().getTime();
    if($('.comments:not(.clon) li[data-id=<%= @reply.parent_id %>] ul.comments-ls').length > 0) {
      $('.comments:not(.clon) li[data-id=<%= @reply.parent_id %>] ul.comments-ls').append('<%= escape_javascript render(@reply) %>');
    } else {
      $('.comments:not(.clon) li[data-id=<%= @reply.parent_id %>] .reply-to')
        .next('.new-response').removeClass('reply-new-response').end()
        .replaceWith($('<ul/>').addClass('comments-ls').html('<%= escape_javascript render(@reply) %>'));
    }
    $('.comments.clon li[data-id=<%= @reply.parent_id %>]').parents('.comments.clon').prev('p').find('a:last-child').addClass(stamp).trigger('click');
    setTimeout(function() {
      $('a.' + stamp).trigger('click');
      scollerToBootom();
    }, 500);
  <% else %>
    if($('#comments_<%= @reply.contextual_index %>').length == 0) {
      $('.app-body-container').append('<%= escape_javascript render(:partial => 'topics/comments', :object => [[@reply.contextual_index,[@reply]]]) %>');
    } else {
      $('#comments_<%= @reply.contextual_index %> > ul').append('<%= escape_javascript render(@reply) %>');
    }
    var link = $('#add_<%= @reply.contextual_index %>');
    if(link.hasClass('no_comments')){
        var mark = link.html()[0];
        link.html(link.html().replace(mark, '&nbsp'));
        link[0].previousSibling.nodeValue += mark + ' ';
        link.addClass('has_comments').removeClass('no_comments');
    }
    link.trigger('click');
    setTimeout(function() {
      $('#add_<%= @reply.contextual_index %>').trigger('click');
      scollerToBootom();
    }, 500);
  <% end %>
$(".comm-wrap").emotions();
  var filter = $('.filter'),
      span = filter.children().removeClass('disabled').find('label.<%= @reply.category%> span'),
      count = parseInt(span.text().replace(/[\(\)]/, ''));
  span.parent().removeClass('disabled').siblings('input').attr('disabled', false);
  span.text('(' + (count+1) + ')');
  $('.helpful').removeClass('disabled');

  var scollerToBootom = function(){
    setTimeout(function() {
      $('body').scrollTop($("body").attr("scrollHeight"));
      reloadHoverIntent();
    }, 500);
  };

  var reloadHoverIntent = function(){
      $('.avatar').hoverIntent(function (e) {
        $('.private-msg.tooltip-box').fadeOut(100);

        var rollover = $(this).siblings('.private-msg');
        if (rollover.length) {
            var that = $(this),
                rollover_left = rollover.css('left') ? rollover.css('left') : 0,
                rollover_top = ($('img', this).height() + 10),
                rollover_bottom = (rollover.outerHeight() + 3),
                indicator = that.siblings('.private-msg').find('.origin'),
                ind_width = 20,
                ind_left = (( $('img', this).width() / 2) + ind_width),
                // pbottom = $(window).height(),
                xtop = rollover.offset().top,
                xleft = rollover.offset().left,
                xright = rollover.offset().left + rollover.outerWidth();

                rollover.css({'top': rollover_top});

            if ((e.pageX + xright) > $(window).width()) {
                rollover.addClass('inside');
                rollover.css({'left': -( (rollover.outerWidth() - $('img', that).parent('.avatar').outerWidth()) - 25 ) })
                indicator.css({'left': ( (rollover.outerWidth() - $('img', that).parent('.avatar').outerWidth()) - 25 ) + ($('img', that).parent('.avatar').outerWidth() / 2)-10 });
                if ($(rollover).parents('.footer-avatar').length) {
                    rollover.addClass('bottom-avatar');
                    rollover.css({'top': -(rollover_bottom) });
                } else {
                    rollover.css({'top': rollover_top});
                }
            } else if ($(rollover).parents('.footer-avatar').length) {
                rollover.addClass('bottom-avatar');
                rollover.css({'top': -(rollover_bottom) });
            } else {
                if(rollover.hasClass('inside')) {
                    rollover.removeClass('inside')
                } else {
                    indicator.css({'left': ind_left});
                }
            }

            rollover.fadeIn(100)
        }
    }, function () {
        var that = $(this);
        timer1 = setTimeout(function(){
            that.siblings('.private-msg').fadeOut(100);
        }, 1000);
    });
  }
<% else %>
  var responseWrapper = $('.response-wrapper:visible');
  responseWrapper.find('.error').text("<%= @reply.errors.full_messages.first %>");
  responseWrapper.find('.loading').removeClass('loading');
<% end %>
