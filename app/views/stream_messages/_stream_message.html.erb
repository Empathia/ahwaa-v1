<div class="stream-item">
  <div class="avatar-wrapper">
    <% unless stream_message.reply.anonymous? %>
      <%= link_to profile_path(stream_message.reply.user) do %>
        <%= avatar_span(stream_message.reply.user, stream_message.reply.user.is_expert?) %>
      <% end %>
      <%= render :partial => 'users/card', :locals => {:user => stream_message.reply.user} %>
    <% else %>
      <span class="avatar">
        <%= image_tag(stream_message.reply.author_avatar, :width => '54') %>
      </span>
    <% end %>
  </div>
  <div class="stream-item-data">
    <div>
      <span class="user-comment">
        <% unless stream_message.reply.anonymous? %>
          <%= stream_message.reply.user.username %>
        <% else %>
          <%= Reply.human_attribute_name(:anonymous) %>
        <% end %>
        <%= stream_message.title.html_safe %>
      </span>
      <span class="time-ago">
        <%= t 'helpers.ago', :time => time_ago_in_words(stream_message.reply.created_at) %>
        <% if object[:enable_follow] && logged_in? && !stream_message.topic.subscribed?(current_user) %>
          <span class="separator">&middot;</span>
          <%= link_to t('stream.follow_topic'), follow_topic_path(stream_message.topic, :format => :json), :method => :post, :class => "follow-topic" %>
        <% end %>
      </span>

      <br class="clear" />
    </div>
    <p class="title"><%= link_to stream_message.reply.topic.title.html_safe, stream_message.reply.topic %></p>
    <blockquote>
      <% if current_user.blocks.map{|u| u.block}.include?(stream_message.reply.user) && !stream_message.reply.anonymous? %>
        <span><i>user blocked</i></span>
      <% else %>
       <%= simple_format truncate(stream_message.reply.content, :length => 140) %>
      <% end %>
    </blockquote>
  </div>
  <br class="clear" />
</div>
